import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "../utils/api";
import Image from "next/image";
import useInput from "../hooks/useInput";
import { useState } from "react";

const Home: NextPage = () => {
  const [userStoryPrompt, setUserStoryPrompt] = useState("");
  const imageStory = api.example.imageStory.useQuery();

  const {
    inputValue: userPrompt,
    valueHandler: userPromptHandler,
    reset: resetUserPrompt,
  } = useInput(() => true, "");

  const storyPromptHandler = () => {
    setUserStoryPrompt(userPrompt);
    resetUserPrompt();
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            AI <span className="text-[hsl(280,100%,70%)]">Image</span> Story
          </h1>
          <div className="flex flex-col gap-2">
            {imageStory && (
              <div className="text-left text-4xl font-extrabold text-white">
                {
                  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                  imageStory.data?.message.story.title
                }
                {/* Lost in Space */}
              </div>
            )}
            {/* {imageStory && (
              <div className="text-left text-2xl font-semibold text-white">
                {
                  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                  imageStory.data?.message.story.subtitle
                }
              </div>)} 
              */}

            <div className="flex items-center gap-6">
              {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                imageStory.data?.message.image ? (
                  <Image
                    className="align-self-center rounded-md"
                    alt="Picture"
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                    //
                    src={imageStory.data?.message.image}
                    width={256}
                    height={256}
                  />
                ) : (
                  <div className="h-64 w-64 animate-pulse rounded-md bg-white/10" />
                )
              }

              {imageStory && (
                <div className="max-w-[300px] text-white">
                  {
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                    imageStory.data?.message.story.description
                  }
                  {/* A team of intrepid astronauts from a distant galaxy have
                  arrived on the distant planet of Mars, ready to explore its
                  untrodden terrain and uncover its secrets. Armed with their
                  sophisticated tools and equipment, they stand together on the
                  red planet's rugged surface, gazing out into the unknown and
                  ready to unlock its mysteries. */}
                </div>
              )}
            </div>
            <div className="mb-3 w-[652px]">
              <label
                htmlFor="exampleFormControlTextarea1"
                className="form-label mb-2 inline-block text-white"
              >
                Create Story
              </label>
              <textarea
                value={userPrompt}
                onChange={userPromptHandler}
                className="
        form-control
        border-grey
        m-0
        block
        min-h-[75px]
        w-full
        rounded
        border
        border-solid
        bg-white/30 bg-clip-padding
        px-3 py-1.5 text-base
        font-normal
        text-white
        transition
        ease-in-out
        focus:border-[#CC66FF] focus:bg-white/25 focus:text-white focus:outline-none
      "
                id="exampleFormControlTextarea1"
                placeholder=""
              ></textarea>
            </div>
          </div>
          <div className="flex flex-col items-center gap-2">
            <button
              className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
              onClick={storyPromptHandler}
            >
              Create Image Story
            </button>
            {/* <AuthShowcase /> */}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
